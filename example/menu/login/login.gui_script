local flow = require "ludobits.m.flow"
local authentication = require "example.playfab.authentication"
local navigate = require "example.navigate"
local dirtylarry = require "dirtylarry/dirtylarry"


local function validate(self)
	local valid = self.username and self.username ~= ""
		and self.password and self.password ~= ""
		
	gui.set_enabled(gui.get_node("login/larrybutton"), valid)
	
	return valid
end 

function init(self)
	msg.post(".", "acquire_input_focus")
	gui.set_text(gui.get_node("username/content"), "")
	gui.set_text(gui.get_node("password/content"), "")
	self.username = ""
	self.password = ""
	validate(self)
end

function final(self)
	msg.post(".", "release_input_focus")
	flow.stop(msg.url())
end


function on_input(self, action_id, action)
	self.username = dirtylarry:input("username", action_id, action, gui.KEYBOARD_TYPE_DEFAULT, "Username...")
	self.password = dirtylarry:input("password", action_id, action, gui.KEYBOARD_TYPE_PASSWORD, "Password...")
	
	dirtylarry:hit("back/button", action_id, action, navigate.startmenu)
	dirtylarry:button("login", action_id, action, function ()
		navigate.show_spinner()
		flow.start(function()
			local response, error = authentication.login(self.username, self.password)
			if error then
				navigate.show_popup(error.errorMessage or "Something went wrong")
				navigate.hide_spinner()
				return
			end
			
			navigate.hide_spinner()
			navigate.startmenu()
		end)
	end)
	validate(self)
end

function on_message(self, message_id, message, sender)
	flow.on_message(message_id, message, sender)
end
	
function on_reload(self)
    -- Add input-handling code here
    -- Remove this function if not needed
end
